From eadf358214b9273a70ffa97f3447dd0005d07347 Mon Sep 17 00:00:00 2001
From: Tomasz Grzyb <Tomasz.Grzyb@partners.mbank.pl>
Date: Thu, 3 Jan 2019 16:55:23 +0100
Subject: [PATCH] Fixed issues with models

---
 .../201812182351085_AddedBasicModels.resx     | 126 ---------------
 ...812190006127_AddedBasicModels1.Designer.cs |  29 ----
 .../201812190006127_AddedBasicModels1.cs      |  22 ---
 .../201812200048086_FieldOfStudies.cs         |  18 ---
 .../201812200048086_FieldOfStudies.resx       | 126 ---------------
 ...> 201901031126194_basicModels.Designer.cs} |   6 +-
 ...dels.cs => 201901031126194_basicModels.cs} | 100 ++++++------
 ....resx => 201901031126194_basicModels.resx} |   2 +-
 ... 201901031551342_filledDbSets.Designer.cs} |   6 +-
 .../201901031551342_filledDbSets.cs           | 149 ++++++++++++++++++
 .../201901031551342_filledDbSets.resx         | 126 +++++++++++++++
 WebRecruiter/Models/ApplicationDbContext.cs   |  44 ++++++
 WebRecruiter/Models/Candidate.cs              |   5 +-
 WebRecruiter/Models/ExamResult.cs             |  11 ++
 WebRecruiter/Models/ExamSubject.cs            |   4 +-
 WebRecruiter/Models/IdentityModels.cs         |  19 +--
 WebRecruiter/Models/Recruitment.cs            |   6 +-
 WebRecruiter/WebRecruiter.csproj              |  29 ++--
 18 files changed, 405 insertions(+), 423 deletions(-)
 delete mode 100644 WebRecruiter/Migrations/201812182351085_AddedBasicModels.resx
 delete mode 100644 WebRecruiter/Migrations/201812190006127_AddedBasicModels1.Designer.cs
 delete mode 100644 WebRecruiter/Migrations/201812190006127_AddedBasicModels1.cs
 delete mode 100644 WebRecruiter/Migrations/201812200048086_FieldOfStudies.cs
 delete mode 100644 WebRecruiter/Migrations/201812200048086_FieldOfStudies.resx
 rename WebRecruiter/Migrations/{201812200048086_FieldOfStudies.Designer.cs => 201901031126194_basicModels.Designer.cs} (80%)
 rename WebRecruiter/Migrations/{201812182351085_AddedBasicModels.cs => 201901031126194_basicModels.cs} (75%)
 rename WebRecruiter/Migrations/{201812190006127_AddedBasicModels1.resx => 201901031126194_basicModels.resx} (54%)
 rename WebRecruiter/Migrations/{201812182351085_AddedBasicModels.Designer.cs => 201901031551342_filledDbSets.Designer.cs} (79%)
 create mode 100644 WebRecruiter/Migrations/201901031551342_filledDbSets.cs
 create mode 100644 WebRecruiter/Migrations/201901031551342_filledDbSets.resx
 create mode 100644 WebRecruiter/Models/ApplicationDbContext.cs
 create mode 100644 WebRecruiter/Models/ExamResult.cs

diff --git a/WebRecruiter/Migrations/201812182351085_AddedBasicModels.resx b/WebRecruiter/Migrations/201812182351085_AddedBasicModels.resx
deleted file mode 100644
index 467875d..0000000
--- a/WebRecruiter/Migrations/201812182351085_AddedBasicModels.resx
+++ /dev/null
@@ -1,126 +0,0 @@
-ï»¿<?xml version="1.0" encoding="utf-8"?>
-<root>
-  <!-- 
-    Microsoft ResX Schema 
-    
-    Version 2.0
-    
-    The primary goals of this format is to allow a simple XML format 
-    that is mostly human readable. The generation and parsing of the 
-    various data types are done through the TypeConverter classes 
-    associated with the data types.
-    
-    Example:
-    
-    ... ado.net/XML headers & schema ...
-    <resheader name="resmimetype">text/microsoft-resx</resheader>
-    <resheader name="version">2.0</resheader>
-    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
-    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
-    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
-    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
-    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
-        <value>[base64 mime encoded serialized .NET Framework object]</value>
-    </data>
-    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
-        <comment>This is a comment</comment>
-    </data>
-                
-    There are any number of "resheader" rows that contain simple 
-    name/value pairs.
-    
-    Each data row contains a name, and value. The row also contains a 
-    type or mimetype. Type corresponds to a .NET class that support 
-    text/value conversion through the TypeConverter architecture. 
-    Classes that don't support this are serialized and stored with the 
-    mimetype set.
-    
-    The mimetype is used for serialized objects, and tells the 
-    ResXResourceReader how to depersist the object. This is currently not 
-    extensible. For a given mimetype the value must be set accordingly:
-    
-    Note - application/x-microsoft.net.object.binary.base64 is the format 
-    that the ResXResourceWriter will generate, however the reader can 
-    read any of the formats listed below.
-    
-    mimetype: application/x-microsoft.net.object.binary.base64
-    value   : The object must be serialized with 
-            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
-            : and then encoded with base64 encoding.
-    
-    mimetype: application/x-microsoft.net.object.soap.base64
-    value   : The object must be serialized with 
-            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
-            : and then encoded with base64 encoding.
-
-    mimetype: application/x-microsoft.net.object.bytearray.base64
-    value   : The object must be serialized into a byte array 
-            : using a System.ComponentModel.TypeConverter
-            : and then encoded with base64 encoding.
-    -->
-  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
-    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
-    <xsd:element name="root" msdata:IsDataSet="true">
-      <xsd:complexType>
-        <xsd:choice maxOccurs="unbounded">
-          <xsd:element name="metadata">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" />
-              </xsd:sequence>
-              <xsd:attribute name="name" use="required" type="xsd:string" />
-              <xsd:attribute name="type" type="xsd:string" />
-              <xsd:attribute name="mimetype" type="xsd:string" />
-              <xsd:attribute ref="xml:space" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="assembly">
-            <xsd:complexType>
-              <xsd:attribute name="alias" type="xsd:string" />
-              <xsd:attribute name="name" type="xsd:string" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="data">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
-                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
-              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
-              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
-              <xsd:attribute ref="xml:space" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="resheader">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" use="required" />
-            </xsd:complexType>
-          </xsd:element>
-        </xsd:choice>
-      </xsd:complexType>
-    </xsd:element>
-  </xsd:schema>
-  <resheader name="resmimetype">
-    <value>text/microsoft-resx</value>
-  </resheader>
-  <resheader name="version">
-    <value>2.0</value>
-  </resheader>
-  <resheader name="reader">
-    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
-  </resheader>
-  <resheader name="writer">
-    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
-  </resheader>
-  <data name="Target" xml:space="preserve">
-    <value>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</value>
-  </data>
-  <data name="DefaultSchema" xml:space="preserve">
-    <value>dbo</value>
-  </data>
-</root>
\ No newline at end of file
diff --git a/WebRecruiter/Migrations/201812190006127_AddedBasicModels1.Designer.cs b/WebRecruiter/Migrations/201812190006127_AddedBasicModels1.Designer.cs
deleted file mode 100644
index 4ee0683..0000000
--- a/WebRecruiter/Migrations/201812190006127_AddedBasicModels1.Designer.cs
+++ /dev/null
@@ -1,29 +0,0 @@
-// <auto-generated />
-namespace WebRecruiter.Migrations
-{
-    using System.CodeDom.Compiler;
-    using System.Data.Entity.Migrations;
-    using System.Data.Entity.Migrations.Infrastructure;
-    using System.Resources;
-    
-    [GeneratedCode("EntityFramework.Migrations", "6.2.0-61023")]
-    public sealed partial class AddedBasicModels1 : IMigrationMetadata
-    {
-        private readonly ResourceManager Resources = new ResourceManager(typeof(AddedBasicModels1));
-        
-        string IMigrationMetadata.Id
-        {
-            get { return "201812190006127_AddedBasicModels1"; }
-        }
-        
-        string IMigrationMetadata.Source
-        {
-            get { return null; }
-        }
-        
-        string IMigrationMetadata.Target
-        {
-            get { return Resources.GetString("Target"); }
-        }
-    }
-}
diff --git a/WebRecruiter/Migrations/201812190006127_AddedBasicModels1.cs b/WebRecruiter/Migrations/201812190006127_AddedBasicModels1.cs
deleted file mode 100644
index bea6a43..0000000
--- a/WebRecruiter/Migrations/201812190006127_AddedBasicModels1.cs
+++ /dev/null
@@ -1,22 +0,0 @@
-namespace WebRecruiter.Migrations
-{
-    using System;
-    using System.Data.Entity.Migrations;
-    
-    public partial class AddedBasicModels1 : DbMigration
-    {
-        public override void Up()
-        {
-            DropForeignKey("dbo.Candidates", "CorrespondenceAddressId", "dbo.Addresses");
-            DropIndex("dbo.Candidates", new[] { "CorrespondenceAddressId" });
-            DropColumn("dbo.Candidates", "CorrespondenceAddressId");
-        }
-        
-        public override void Down()
-        {
-            AddColumn("dbo.Candidates", "CorrespondenceAddressId", c => c.Int(nullable: false));
-            CreateIndex("dbo.Candidates", "CorrespondenceAddressId");
-            AddForeignKey("dbo.Candidates", "CorrespondenceAddressId", "dbo.Addresses", "Id", cascadeDelete: true);
-        }
-    }
-}
diff --git a/WebRecruiter/Migrations/201812200048086_FieldOfStudies.cs b/WebRecruiter/Migrations/201812200048086_FieldOfStudies.cs
deleted file mode 100644
index 9e8ddf1..0000000
--- a/WebRecruiter/Migrations/201812200048086_FieldOfStudies.cs
+++ /dev/null
@@ -1,18 +0,0 @@
-namespace WebRecruiter.Migrations
-{
-    using System;
-    using System.Data.Entity.Migrations;
-    
-    public partial class FieldOfStudies : DbMigration
-    {
-        public override void Up()
-        {
-            AddColumn("dbo.Candidates", "UserId", c => c.Int(nullable: false));
-        }
-        
-        public override void Down()
-        {
-            DropColumn("dbo.Candidates", "UserId");
-        }
-    }
-}
diff --git a/WebRecruiter/Migrations/201812200048086_FieldOfStudies.resx b/WebRecruiter/Migrations/201812200048086_FieldOfStudies.resx
deleted file mode 100644
index ff6c820..0000000
--- a/WebRecruiter/Migrations/201812200048086_FieldOfStudies.resx
+++ /dev/null
@@ -1,126 +0,0 @@
-ï»¿<?xml version="1.0" encoding="utf-8"?>
-<root>
-  <!-- 
-    Microsoft ResX Schema 
-    
-    Version 2.0
-    
-    The primary goals of this format is to allow a simple XML format 
-    that is mostly human readable. The generation and parsing of the 
-    various data types are done through the TypeConverter classes 
-    associated with the data types.
-    
-    Example:
-    
-    ... ado.net/XML headers & schema ...
-    <resheader name="resmimetype">text/microsoft-resx</resheader>
-    <resheader name="version">2.0</resheader>
-    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
-    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
-    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
-    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
-    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
-        <value>[base64 mime encoded serialized .NET Framework object]</value>
-    </data>
-    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
-        <comment>This is a comment</comment>
-    </data>
-                
-    There are any number of "resheader" rows that contain simple 
-    name/value pairs.
-    
-    Each data row contains a name, and value. The row also contains a 
-    type or mimetype. Type corresponds to a .NET class that support 
-    text/value conversion through the TypeConverter architecture. 
-    Classes that don't support this are serialized and stored with the 
-    mimetype set.
-    
-    The mimetype is used for serialized objects, and tells the 
-    ResXResourceReader how to depersist the object. This is currently not 
-    extensible. For a given mimetype the value must be set accordingly:
-    
-    Note - application/x-microsoft.net.object.binary.base64 is the format 
-    that the ResXResourceWriter will generate, however the reader can 
-    read any of the formats listed below.
-    
-    mimetype: application/x-microsoft.net.object.binary.base64
-    value   : The object must be serialized with 
-            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
-            : and then encoded with base64 encoding.
-    
-    mimetype: application/x-microsoft.net.object.soap.base64
-    value   : The object must be serialized with 
-            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
-            : and then encoded with base64 encoding.
-
-    mimetype: application/x-microsoft.net.object.bytearray.base64
-    value   : The object must be serialized into a byte array 
-            : using a System.ComponentModel.TypeConverter
-            : and then encoded with base64 encoding.
-    -->
-  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
-    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
-    <xsd:element name="root" msdata:IsDataSet="true">
-      <xsd:complexType>
-        <xsd:choice maxOccurs="unbounded">
-          <xsd:element name="metadata">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" />
-              </xsd:sequence>
-              <xsd:attribute name="name" use="required" type="xsd:string" />
-              <xsd:attribute name="type" type="xsd:string" />
-              <xsd:attribute name="mimetype" type="xsd:string" />
-              <xsd:attribute ref="xml:space" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="assembly">
-            <xsd:complexType>
-              <xsd:attribute name="alias" type="xsd:string" />
-              <xsd:attribute name="name" type="xsd:string" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="data">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
-                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
-              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
-              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
-              <xsd:attribute ref="xml:space" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="resheader">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" use="required" />
-            </xsd:complexType>
-          </xsd:element>
-        </xsd:choice>
-      </xsd:complexType>
-    </xsd:element>
-  </xsd:schema>
-  <resheader name="resmimetype">
-    <value>text/microsoft-resx</value>
-  </resheader>
-  <resheader name="version">
-    <value>2.0</value>
-  </resheader>
-  <resheader name="reader">
-    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
-  </resheader>
-  <resheader name="writer">
-    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
-  </resheader>
-  <data name="Target" xml:space="preserve">
-    <value>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</value>
-  </data>
-  <data name="DefaultSchema" xml:space="preserve">
-    <value>dbo</value>
-  </data>
-</root>
\ No newline at end of file
diff --git a/WebRecruiter/Migrations/201812200048086_FieldOfStudies.Designer.cs b/WebRecruiter/Migrations/201901031126194_basicModels.Designer.cs
similarity index 80%
rename from WebRecruiter/Migrations/201812200048086_FieldOfStudies.Designer.cs
rename to WebRecruiter/Migrations/201901031126194_basicModels.Designer.cs
index cb70a5e..30c741d 100644
--- a/WebRecruiter/Migrations/201812200048086_FieldOfStudies.Designer.cs
+++ b/WebRecruiter/Migrations/201901031126194_basicModels.Designer.cs
@@ -7,13 +7,13 @@ namespace WebRecruiter.Migrations
     using System.Resources;
     
     [GeneratedCode("EntityFramework.Migrations", "6.2.0-61023")]
-    public sealed partial class FieldOfStudies : IMigrationMetadata
+    public sealed partial class basicModels : IMigrationMetadata
     {
-        private readonly ResourceManager Resources = new ResourceManager(typeof(FieldOfStudies));
+        private readonly ResourceManager Resources = new ResourceManager(typeof(basicModels));
         
         string IMigrationMetadata.Id
         {
-            get { return "201812200048086_FieldOfStudies"; }
+            get { return "201901031126194_basicModels"; }
         }
         
         string IMigrationMetadata.Source
diff --git a/WebRecruiter/Migrations/201812182351085_AddedBasicModels.cs b/WebRecruiter/Migrations/201901031126194_basicModels.cs
similarity index 75%
rename from WebRecruiter/Migrations/201812182351085_AddedBasicModels.cs
rename to WebRecruiter/Migrations/201901031126194_basicModels.cs
index ff30613..9212115 100644
--- a/WebRecruiter/Migrations/201812182351085_AddedBasicModels.cs
+++ b/WebRecruiter/Migrations/201901031126194_basicModels.cs
@@ -3,7 +3,7 @@ namespace WebRecruiter.Migrations
     using System;
     using System.Data.Entity.Migrations;
     
-    public partial class AddedBasicModels : DbMigration
+    public partial class basicModels : DbMigration
     {
         public override void Up()
         {
@@ -14,7 +14,7 @@ namespace WebRecruiter.Migrations
                         Id = c.Int(nullable: false, identity: true),
                         Street = c.String(),
                         HouseNumber = c.Int(nullable: false),
-                        ApartmentNumber = c.Int(nullable: true),
+                        ApartmentNumber = c.Int(nullable: false),
                         City = c.String(),
                         ZipCode = c.String(),
                         Country = c.String(),
@@ -26,6 +26,7 @@ namespace WebRecruiter.Migrations
                 c => new
                     {
                         Id = c.Int(nullable: false, identity: true),
+                        UserId = c.String(maxLength: 128),
                         FirstName = c.String(),
                         SecondName = c.String(),
                         LastName = c.String(),
@@ -33,15 +34,14 @@ namespace WebRecruiter.Migrations
                         PlaceOfBirth = c.String(),
                         PhoneNumber = c.String(),
                         Pesel = c.String(),
-                        CorrespondenceAddressId = c.Int(nullable: false),
                         AddressId = c.Int(nullable: false),
                         DocumentId = c.Int(nullable: false),
                     })
                 .PrimaryKey(t => t.Id)
                 .ForeignKey("dbo.Addresses", t => t.AddressId, cascadeDelete: true)
-                .ForeignKey("dbo.Addresses", t => t.CorrespondenceAddressId, cascadeDelete: true)
                 .ForeignKey("dbo.Documents", t => t.DocumentId, cascadeDelete: true)
-                .Index(t => t.CorrespondenceAddressId)
+                .ForeignKey("dbo.AspNetUsers", t => t.UserId)
+                .Index(t => t.UserId)
                 .Index(t => t.AddressId)
                 .Index(t => t.DocumentId);
             
@@ -68,30 +68,7 @@ namespace WebRecruiter.Migrations
                 .PrimaryKey(t => t.Id);
             
             CreateTable(
-                "dbo.Roles",
-                c => new
-                    {
-                        Id = c.String(nullable: false, maxLength: 128),
-                        Name = c.String(nullable: false, maxLength: 256),
-                    })
-                .PrimaryKey(t => t.Id)
-                .Index(t => t.Name, unique: true, name: "RoleNameIndex");
-            
-            CreateTable(
-                "dbo.UserRoles",
-                c => new
-                    {
-                        UserId = c.String(nullable: false, maxLength: 128),
-                        RoleId = c.String(nullable: false, maxLength: 128),
-                    })
-                .PrimaryKey(t => new { t.UserId, t.RoleId })
-                .ForeignKey("dbo.Roles", t => t.RoleId, cascadeDelete: true)
-                .ForeignKey("dbo.Users", t => t.UserId, cascadeDelete: true)
-                .Index(t => t.UserId)
-                .Index(t => t.RoleId);
-            
-            CreateTable(
-                "dbo.Users",
+                "dbo.AspNetUsers",
                 c => new
                     {
                         Id = c.String(nullable: false, maxLength: 128),
@@ -111,7 +88,7 @@ namespace WebRecruiter.Migrations
                 .Index(t => t.UserName, unique: true, name: "UserNameIndex");
             
             CreateTable(
-                "dbo.UserClaims",
+                "dbo.AspNetUserClaims",
                 c => new
                     {
                         Id = c.Int(nullable: false, identity: true),
@@ -120,11 +97,11 @@ namespace WebRecruiter.Migrations
                         ClaimValue = c.String(),
                     })
                 .PrimaryKey(t => t.Id)
-                .ForeignKey("dbo.Users", t => t.UserId, cascadeDelete: true)
+                .ForeignKey("dbo.AspNetUsers", t => t.UserId, cascadeDelete: true)
                 .Index(t => t.UserId);
             
             CreateTable(
-                "dbo.UserLogins",
+                "dbo.AspNetUserLogins",
                 c => new
                     {
                         LoginProvider = c.String(nullable: false, maxLength: 128),
@@ -132,36 +109,59 @@ namespace WebRecruiter.Migrations
                         UserId = c.String(nullable: false, maxLength: 128),
                     })
                 .PrimaryKey(t => new { t.LoginProvider, t.ProviderKey, t.UserId })
-                .ForeignKey("dbo.Users", t => t.UserId, cascadeDelete: true)
+                .ForeignKey("dbo.AspNetUsers", t => t.UserId, cascadeDelete: true)
                 .Index(t => t.UserId);
             
+            CreateTable(
+                "dbo.AspNetUserRoles",
+                c => new
+                    {
+                        UserId = c.String(nullable: false, maxLength: 128),
+                        RoleId = c.String(nullable: false, maxLength: 128),
+                    })
+                .PrimaryKey(t => new { t.UserId, t.RoleId })
+                .ForeignKey("dbo.AspNetUsers", t => t.UserId, cascadeDelete: true)
+                .ForeignKey("dbo.AspNetRoles", t => t.RoleId, cascadeDelete: true)
+                .Index(t => t.UserId)
+                .Index(t => t.RoleId);
+            
+            CreateTable(
+                "dbo.AspNetRoles",
+                c => new
+                    {
+                        Id = c.String(nullable: false, maxLength: 128),
+                        Name = c.String(nullable: false, maxLength: 256),
+                    })
+                .PrimaryKey(t => t.Id)
+                .Index(t => t.Name, unique: true, name: "RoleNameIndex");
+            
         }
         
         public override void Down()
         {
-            DropForeignKey("dbo.UserRoles", "UserId", "dbo.Users");
-            DropForeignKey("dbo.UserLogins", "UserId", "dbo.Users");
-            DropForeignKey("dbo.UserClaims", "UserId", "dbo.Users");
-            DropForeignKey("dbo.UserRoles", "RoleId", "dbo.Roles");
+            DropForeignKey("dbo.AspNetUserRoles", "RoleId", "dbo.AspNetRoles");
+            DropForeignKey("dbo.Candidates", "UserId", "dbo.AspNetUsers");
+            DropForeignKey("dbo.AspNetUserRoles", "UserId", "dbo.AspNetUsers");
+            DropForeignKey("dbo.AspNetUserLogins", "UserId", "dbo.AspNetUsers");
+            DropForeignKey("dbo.AspNetUserClaims", "UserId", "dbo.AspNetUsers");
             DropForeignKey("dbo.Candidates", "DocumentId", "dbo.Documents");
             DropForeignKey("dbo.Documents", "DocumentTypeId", "dbo.DocumentTypes");
-            DropForeignKey("dbo.Candidates", "CorrespondenceAddressId", "dbo.Addresses");
             DropForeignKey("dbo.Candidates", "AddressId", "dbo.Addresses");
-            DropIndex("dbo.UserLogins", new[] { "UserId" });
-            DropIndex("dbo.UserClaims", new[] { "UserId" });
-            DropIndex("dbo.Users", "UserNameIndex");
-            DropIndex("dbo.UserRoles", new[] { "RoleId" });
-            DropIndex("dbo.UserRoles", new[] { "UserId" });
-            DropIndex("dbo.Roles", "RoleNameIndex");
+            DropIndex("dbo.AspNetRoles", "RoleNameIndex");
+            DropIndex("dbo.AspNetUserRoles", new[] { "RoleId" });
+            DropIndex("dbo.AspNetUserRoles", new[] { "UserId" });
+            DropIndex("dbo.AspNetUserLogins", new[] { "UserId" });
+            DropIndex("dbo.AspNetUserClaims", new[] { "UserId" });
+            DropIndex("dbo.AspNetUsers", "UserNameIndex");
             DropIndex("dbo.Documents", new[] { "DocumentTypeId" });
             DropIndex("dbo.Candidates", new[] { "DocumentId" });
             DropIndex("dbo.Candidates", new[] { "AddressId" });
-            DropIndex("dbo.Candidates", new[] { "CorrespondenceAddressId" });
-            DropTable("dbo.UserLogins");
-            DropTable("dbo.UserClaims");
-            DropTable("dbo.Users");
-            DropTable("dbo.UserRoles");
-            DropTable("dbo.Roles");
+            DropIndex("dbo.Candidates", new[] { "UserId" });
+            DropTable("dbo.AspNetRoles");
+            DropTable("dbo.AspNetUserRoles");
+            DropTable("dbo.AspNetUserLogins");
+            DropTable("dbo.AspNetUserClaims");
+            DropTable("dbo.AspNetUsers");
             DropTable("dbo.DocumentTypes");
             DropTable("dbo.Documents");
             DropTable("dbo.Candidates");
diff --git a/WebRecruiter/Migrations/201812190006127_AddedBasicModels1.resx b/WebRecruiter/Migrations/201901031126194_basicModels.resx
similarity index 54%
rename from WebRecruiter/Migrations/201812190006127_AddedBasicModels1.resx
rename to WebRecruiter/Migrations/201901031126194_basicModels.resx
index b9e32a1..e46c84b 100644
--- a/WebRecruiter/Migrations/201812190006127_AddedBasicModels1.resx
+++ b/WebRecruiter/Migrations/201901031126194_basicModels.resx
@@ -118,7 +118,7 @@
     <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <data name="Target" xml:space="preserve">
-    <value>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</value>
+    <value>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</value>
   </data>
   <data name="DefaultSchema" xml:space="preserve">
     <value>dbo</value>
diff --git a/WebRecruiter/Migrations/201812182351085_AddedBasicModels.Designer.cs b/WebRecruiter/Migrations/201901031551342_filledDbSets.Designer.cs
similarity index 79%
rename from WebRecruiter/Migrations/201812182351085_AddedBasicModels.Designer.cs
rename to WebRecruiter/Migrations/201901031551342_filledDbSets.Designer.cs
index 85cd709..ad33978 100644
--- a/WebRecruiter/Migrations/201812182351085_AddedBasicModels.Designer.cs
+++ b/WebRecruiter/Migrations/201901031551342_filledDbSets.Designer.cs
@@ -7,13 +7,13 @@ namespace WebRecruiter.Migrations
     using System.Resources;
     
     [GeneratedCode("EntityFramework.Migrations", "6.2.0-61023")]
-    public sealed partial class AddedBasicModels : IMigrationMetadata
+    public sealed partial class filledDbSets : IMigrationMetadata
     {
-        private readonly ResourceManager Resources = new ResourceManager(typeof(AddedBasicModels));
+        private readonly ResourceManager Resources = new ResourceManager(typeof(filledDbSets));
         
         string IMigrationMetadata.Id
         {
-            get { return "201812182351085_AddedBasicModels"; }
+            get { return "201901031551342_filledDbSets"; }
         }
         
         string IMigrationMetadata.Source
diff --git a/WebRecruiter/Migrations/201901031551342_filledDbSets.cs b/WebRecruiter/Migrations/201901031551342_filledDbSets.cs
new file mode 100644
index 0000000..01d2cb3
--- /dev/null
+++ b/WebRecruiter/Migrations/201901031551342_filledDbSets.cs
@@ -0,0 +1,149 @@
+namespace WebRecruiter.Migrations
+{
+    using System;
+    using System.Data.Entity.Migrations;
+    
+    public partial class filledDbSets : DbMigration
+    {
+        public override void Up()
+        {
+            RenameTable(name: "dbo.AspNetUsers", newName: "User");
+            RenameTable(name: "dbo.AspNetUserClaims", newName: "UserClaim");
+            RenameTable(name: "dbo.AspNetUserLogins", newName: "UserLogin");
+            RenameTable(name: "dbo.AspNetUserRoles", newName: "UserRole");
+            RenameTable(name: "dbo.AspNetRoles", newName: "Role");
+            CreateTable(
+                "dbo.ExamResults",
+                c => new
+                    {
+                        Id = c.Short(nullable: false, identity: true),
+                        ReceivedPoints = c.Short(nullable: false),
+                        IsAdvanced = c.Boolean(nullable: false),
+                        ExamSubjectId = c.Short(nullable: false),
+                    })
+                .PrimaryKey(t => t.Id)
+                .ForeignKey("dbo.ExamSubjects", t => t.ExamSubjectId, cascadeDelete: true)
+                .Index(t => t.ExamSubjectId);
+            
+            CreateTable(
+                "dbo.ExamSubjects",
+                c => new
+                    {
+                        Id = c.Short(nullable: false, identity: true),
+                        Name = c.String(),
+                    })
+                .PrimaryKey(t => t.Id);
+            
+            CreateTable(
+                "dbo.FieldOfStudyRequirements",
+                c => new
+                    {
+                        Id = c.Int(nullable: false, identity: true),
+                        RequiredPoints = c.Short(nullable: false),
+                        FieldOfStudyId = c.Short(nullable: false),
+                        ExamSubjectId = c.Short(nullable: false),
+                    })
+                .PrimaryKey(t => t.Id)
+                .ForeignKey("dbo.ExamSubjects", t => t.ExamSubjectId, cascadeDelete: true)
+                .ForeignKey("dbo.FieldOfStudies", t => t.FieldOfStudyId, cascadeDelete: true)
+                .Index(t => t.FieldOfStudyId)
+                .Index(t => t.ExamSubjectId);
+            
+            CreateTable(
+                "dbo.FieldOfStudies",
+                c => new
+                    {
+                        Id = c.Short(nullable: false, identity: true),
+                        Name = c.String(),
+                        Description = c.String(),
+                        LimitOfStudents = c.Short(nullable: false),
+                        StudyTypeId = c.Short(nullable: false),
+                        StudyDegreeId = c.Short(nullable: false),
+                    })
+                .PrimaryKey(t => t.Id)
+                .ForeignKey("dbo.StudyDegrees", t => t.StudyDegreeId, cascadeDelete: true)
+                .ForeignKey("dbo.StudyTypes", t => t.StudyTypeId, cascadeDelete: true)
+                .Index(t => t.StudyTypeId)
+                .Index(t => t.StudyDegreeId);
+            
+            CreateTable(
+                "dbo.StudyDegrees",
+                c => new
+                    {
+                        Id = c.Short(nullable: false, identity: true),
+                        Name = c.String(),
+                    })
+                .PrimaryKey(t => t.Id);
+            
+            CreateTable(
+                "dbo.StudyTypes",
+                c => new
+                    {
+                        Id = c.Short(nullable: false, identity: true),
+                        Name = c.String(),
+                    })
+                .PrimaryKey(t => t.Id);
+            
+            CreateTable(
+                "dbo.Recruitments",
+                c => new
+                    {
+                        Id = c.Int(nullable: false, identity: true),
+                        CandidateId = c.Int(nullable: false),
+                        FieldOfStudyId = c.Short(nullable: false),
+                        RecruitmentStatusId = c.Short(nullable: false),
+                        CreatedOn = c.DateTime(nullable: false),
+                    })
+                .PrimaryKey(t => t.Id)
+                .ForeignKey("dbo.Candidates", t => t.CandidateId, cascadeDelete: true)
+                .ForeignKey("dbo.FieldOfStudies", t => t.FieldOfStudyId, cascadeDelete: true)
+                .ForeignKey("dbo.RecruitmentStatus", t => t.RecruitmentStatusId, cascadeDelete: true)
+                .Index(t => t.CandidateId)
+                .Index(t => t.FieldOfStudyId)
+                .Index(t => t.RecruitmentStatusId);
+            
+            CreateTable(
+                "dbo.RecruitmentStatus",
+                c => new
+                    {
+                        Id = c.Short(nullable: false, identity: true),
+                        Name = c.String(),
+                    })
+                .PrimaryKey(t => t.Id);
+            
+        }
+        
+        public override void Down()
+        {
+            DropForeignKey("dbo.Recruitments", "RecruitmentStatusId", "dbo.RecruitmentStatus");
+            DropForeignKey("dbo.Recruitments", "FieldOfStudyId", "dbo.FieldOfStudies");
+            DropForeignKey("dbo.Recruitments", "CandidateId", "dbo.Candidates");
+            DropForeignKey("dbo.FieldOfStudies", "StudyTypeId", "dbo.StudyTypes");
+            DropForeignKey("dbo.FieldOfStudies", "StudyDegreeId", "dbo.StudyDegrees");
+            DropForeignKey("dbo.FieldOfStudyRequirements", "FieldOfStudyId", "dbo.FieldOfStudies");
+            DropForeignKey("dbo.FieldOfStudyRequirements", "ExamSubjectId", "dbo.ExamSubjects");
+            DropForeignKey("dbo.ExamResults", "ExamSubjectId", "dbo.ExamSubjects");
+            DropIndex("dbo.Recruitments", new[] { "RecruitmentStatusId" });
+            DropIndex("dbo.Recruitments", new[] { "FieldOfStudyId" });
+            DropIndex("dbo.Recruitments", new[] { "CandidateId" });
+            DropIndex("dbo.FieldOfStudies", new[] { "StudyDegreeId" });
+            DropIndex("dbo.FieldOfStudies", new[] { "StudyTypeId" });
+            DropIndex("dbo.FieldOfStudyRequirements", new[] { "ExamSubjectId" });
+            DropIndex("dbo.FieldOfStudyRequirements", new[] { "FieldOfStudyId" });
+            DropIndex("dbo.ExamResults", new[] { "ExamSubjectId" });
+            DropTable("dbo.RecruitmentStatus");
+            DropTable("dbo.Recruitments");
+            DropTable("dbo.StudyTypes");
+            DropTable("dbo.StudyDegrees");
+            DropTable("dbo.FieldOfStudies");
+            DropTable("dbo.FieldOfStudyRequirements");
+            DropTable("dbo.ExamSubjects");
+            DropTable("dbo.ExamResults");
+            RenameTable(name: "dbo.Role", newName: "AspNetRoles");
+            RenameTable(name: "dbo.UserRole", newName: "AspNetUserRoles");
+            RenameTable(name: "dbo.UserLogin", newName: "AspNetUserLogins");
+            RenameTable(name: "dbo.UserClaim", newName: "AspNetUserClaims");
+            RenameTable(name: "dbo.User", newName: "AspNetUsers");
+        }
+    }
+}
diff --git a/WebRecruiter/Migrations/201901031551342_filledDbSets.resx b/WebRecruiter/Migrations/201901031551342_filledDbSets.resx
new file mode 100644
index 0000000..96a09fa
--- /dev/null
+++ b/WebRecruiter/Migrations/201901031551342_filledDbSets.resx
@@ -0,0 +1,126 @@
+ï»¿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" use="required" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <data name="Target" xml:space="preserve">
+    <value>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</value>
+  </data>
+  <data name="DefaultSchema" xml:space="preserve">
+    <value>dbo</value>
+  </data>
+</root>
\ No newline at end of file
diff --git a/WebRecruiter/Models/ApplicationDbContext.cs b/WebRecruiter/Models/ApplicationDbContext.cs
new file mode 100644
index 0000000..38f588e
--- /dev/null
+++ b/WebRecruiter/Models/ApplicationDbContext.cs
@@ -0,0 +1,44 @@
+ï»¿using Microsoft.AspNet.Identity.EntityFramework;
+using System;
+using System.Collections.Generic;
+using System.Data.Entity;
+using System.Linq;
+using System.Web;
+
+namespace WebRecruiter.Models
+{
+    public class ApplicationDbContext : IdentityDbContext<ApplicationUser>
+    {
+        public DbSet<Candidate> Candidates { get; set; }
+        public DbSet<Address> Addresses { get; set; }
+        public DbSet<Document> Documents { get; set; }
+        public DbSet<DocumentType> DocumentTypes { get; set; }
+        public DbSet<Recruitment> Recruitments { get; set; }
+        public DbSet<RecruitmentStatus> RecruitmentStatuses { get; set; }
+        public DbSet<FieldOfStudy> FieldsOfStudies { get; set; }
+        public DbSet<ExamSubject> ExamSubjects { get; set; }
+        public DbSet<ExamResult> ExamResults { get; set; }
+        public DbSet<FieldOfStudyRequirement> FieldOfStudyRequirements { get; set; }
+        public DbSet<StudyDegree> StudyDegreeses { get; set; }
+        public DbSet<StudyType> StudyTypes { get; set; }
+        public ApplicationDbContext()
+            : base("DefaultConnection", throwIfV1Schema: false)
+        {
+        }
+
+        public static ApplicationDbContext Create()
+        {
+            return new ApplicationDbContext();
+        }
+
+        protected override void OnModelCreating(DbModelBuilder modelBuilder)
+        {
+            base.OnModelCreating(modelBuilder);
+            modelBuilder.Entity<IdentityUserClaim>().ToTable("UserClaim");
+            modelBuilder.Entity<IdentityUserRole>().ToTable("UserRole");
+            modelBuilder.Entity<IdentityUserLogin>().ToTable("UserLogin");
+            modelBuilder.Entity<IdentityRole>().ToTable("Role");
+            modelBuilder.Entity<ApplicationUser>().ToTable("User");
+        }
+    }
+}
\ No newline at end of file
diff --git a/WebRecruiter/Models/Candidate.cs b/WebRecruiter/Models/Candidate.cs
index b3b2808..c918090 100644
--- a/WebRecruiter/Models/Candidate.cs
+++ b/WebRecruiter/Models/Candidate.cs
@@ -8,7 +8,6 @@ namespace WebRecruiter.Models
 	public class Candidate
 	{
 		public int Id { get; set; }
-		public int UserId { get; set; }
 		public string FirstName { get; set; }
 		public string SecondName { get; set; }
 		public string LastName { get; set; }
@@ -20,6 +19,8 @@ namespace WebRecruiter.Models
 		public Address Address { get; set; }
 		public int DocumentId { get; set; }
 		public Document Document { get; set; }
+	    public string UserId { get; set; }
+	    public ApplicationUser User { get; set; }
 
-	}
+    }
 }
\ No newline at end of file
diff --git a/WebRecruiter/Models/ExamResult.cs b/WebRecruiter/Models/ExamResult.cs
new file mode 100644
index 0000000..fc9f2c3
--- /dev/null
+++ b/WebRecruiter/Models/ExamResult.cs
@@ -0,0 +1,11 @@
+ï»¿namespace WebRecruiter.Models
+{
+    public class ExamResult
+    {
+        public short Id { get; set; }
+        public short ReceivedPoints { get; set; }
+        public bool IsAdvanced { get; set; }
+        public short ExamSubjectId { get; set; }
+        public ExamSubject ExamSubject { get; set; }
+    }
+}
\ No newline at end of file
diff --git a/WebRecruiter/Models/ExamSubject.cs b/WebRecruiter/Models/ExamSubject.cs
index c61ace3..5981a2d 100644
--- a/WebRecruiter/Models/ExamSubject.cs
+++ b/WebRecruiter/Models/ExamSubject.cs
@@ -5,11 +5,9 @@ using System.Web;
 
 namespace WebRecruiter.Models
 {
-	public class ExamSubject
+    public class ExamSubject
 	{
 		public short Id { get; set; }
 		public string Name { get; set; }
-		public short ReceivedPoints { get; set; }
-		public bool IsAdvanced { get; set; }
 	}
 }
\ No newline at end of file
diff --git a/WebRecruiter/Models/IdentityModels.cs b/WebRecruiter/Models/IdentityModels.cs
index 995dba1..945a0ca 100644
--- a/WebRecruiter/Models/IdentityModels.cs
+++ b/WebRecruiter/Models/IdentityModels.cs
@@ -17,22 +17,5 @@ namespace WebRecruiter.Models
             return userIdentity;
         }
     }
-
-    public class ApplicationDbContext : IdentityDbContext<ApplicationUser>
-    {
-		public DbSet<Candidate> Candidates { get; set; }
-		public DbSet<Address> Addresses { get; set; }
-		public DbSet<Document> Documents { get; set; }
-		public DbSet<DocumentType> DocumentTypes { get; set; }
-
-		public ApplicationDbContext()
-            : base("DefaultConnection", throwIfV1Schema: false)
-        {
-        }
-
-        public static ApplicationDbContext Create()
-        {
-            return new ApplicationDbContext();
-        }
-    }
+    
 }
\ No newline at end of file
diff --git a/WebRecruiter/Models/Recruitment.cs b/WebRecruiter/Models/Recruitment.cs
index 9d4cf21..aef5805 100644
--- a/WebRecruiter/Models/Recruitment.cs
+++ b/WebRecruiter/Models/Recruitment.cs
@@ -7,17 +7,13 @@ namespace WebRecruiter.Models
 {
 	public class Recruitment
 	{
-		public int Id { get; set; }
-		
+		public int Id { get; set; }		
 		public int CandidateId { get; set; }
 		public Candidate Candidate { get; set; }
-
 		public short FieldOfStudyId { get; set; }
 		public FieldOfStudy FieldOfStudy { get; set; }
-
 		public short RecruitmentStatusId { get; set; }
 		public RecruitmentStatus RecruitmentStatus { get; set; }
-
 		public DateTime CreatedOn { get; set; }
 
 	}
diff --git a/WebRecruiter/WebRecruiter.csproj b/WebRecruiter/WebRecruiter.csproj
index 133a5b6..381e398 100644
--- a/WebRecruiter/WebRecruiter.csproj
+++ b/WebRecruiter/WebRecruiter.csproj
@@ -201,23 +201,21 @@
     <Compile Include="Global.asax.cs">
       <DependentUpon>Global.asax</DependentUpon>
     </Compile>
-    <Compile Include="Migrations\201812182351085_AddedBasicModels.cs" />
-    <Compile Include="Migrations\201812182351085_AddedBasicModels.Designer.cs">
-      <DependentUpon>201812182351085_AddedBasicModels.cs</DependentUpon>
+    <Compile Include="Migrations\201901031126194_basicModels.cs" />
+    <Compile Include="Migrations\201901031126194_basicModels.Designer.cs">
+      <DependentUpon>201901031126194_basicModels.cs</DependentUpon>
     </Compile>
-    <Compile Include="Migrations\201812190006127_AddedBasicModels1.cs" />
-    <Compile Include="Migrations\201812190006127_AddedBasicModels1.Designer.cs">
-      <DependentUpon>201812190006127_AddedBasicModels1.cs</DependentUpon>
-    </Compile>
-    <Compile Include="Migrations\201812200048086_FieldOfStudies.cs" />
-    <Compile Include="Migrations\201812200048086_FieldOfStudies.Designer.cs">
-      <DependentUpon>201812200048086_FieldOfStudies.cs</DependentUpon>
+    <Compile Include="Migrations\201901031551342_filledDbSets.cs" />
+    <Compile Include="Migrations\201901031551342_filledDbSets.Designer.cs">
+      <DependentUpon>201901031551342_filledDbSets.cs</DependentUpon>
     </Compile>
     <Compile Include="Migrations\Configuration.cs" />
     <Compile Include="Models\Address.cs" />
+    <Compile Include="Models\ApplicationDbContext.cs" />
     <Compile Include="Models\Candidate.cs" />
     <Compile Include="Models\Document.cs" />
     <Compile Include="Models\DocumentType.cs" />
+    <Compile Include="Models\ExamResult.cs" />
     <Compile Include="Models\ExamSubject.cs" />
     <Compile Include="Models\FieldOfStudy.cs" />
     <Compile Include="Models\FieldOfStudyRequirement.cs" />
@@ -315,14 +313,11 @@
     <Content Include="Content\Scripts\jquery-3.3.1.min.map" />
   </ItemGroup>
   <ItemGroup>
-    <EmbeddedResource Include="Migrations\201812182351085_AddedBasicModels.resx">
-      <DependentUpon>201812182351085_AddedBasicModels.cs</DependentUpon>
-    </EmbeddedResource>
-    <EmbeddedResource Include="Migrations\201812190006127_AddedBasicModels1.resx">
-      <DependentUpon>201812190006127_AddedBasicModels1.cs</DependentUpon>
+    <EmbeddedResource Include="Migrations\201901031126194_basicModels.resx">
+      <DependentUpon>201901031126194_basicModels.cs</DependentUpon>
     </EmbeddedResource>
-    <EmbeddedResource Include="Migrations\201812200048086_FieldOfStudies.resx">
-      <DependentUpon>201812200048086_FieldOfStudies.cs</DependentUpon>
+    <EmbeddedResource Include="Migrations\201901031551342_filledDbSets.resx">
+      <DependentUpon>201901031551342_filledDbSets.cs</DependentUpon>
     </EmbeddedResource>
   </ItemGroup>
   <PropertyGroup>
-- 
2.19.0.windows.1

